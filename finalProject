#!/usr/bin/perl

#Use statments to make sure proper Perl is writen and we are informed of bad uses or errors
use strict;
use warnings;
use diagnostics;

#Version specification to maximise compatibility
use v5.32;

# Read the input file containing the master exam
my $input_file = '0_ENTRANCE_EXAM_MASTER_';
open my $fh_in, '<', $input_file or die "Could not open $input_file: $!";

# Open the output file to write modified content
my $output_file = 'modified_exam.txt';
open my $fh_out, '>', $output_file or die "Could not open $output_file: $!";

# Initialize variables to hold questions and answers
my @questions;
my @answer_sets;

# Process each line in the input file
while (my $line = <$fh_in>) {
    chomp $line;

    # Detect questions and answer sets
    if ($line =~ /^(\d+\.\s+.+)$/) {
        push @questions, $1;
        push @answer_sets, []; # Initialize answer set array for the new question
    } elsif ($line =~ /^\s*\[.\]\s+(.+)$/ && @questions) {
        push @{$answer_sets[-1]}, $1; # Add answer to the last question encountered
    }
}

# Close the input file
close $fh_in;

# Write the modified content to the output file
for my $i (0..$#questions) {
    print $fh_out "________________________________________________________________________________\n\n";
    print $fh_out "$questions[$i]\n\n";

    for my $j (0..$#{$answer_sets[$i]}) {
        print $fh_out "    [ ] $answer_sets[$i][$j]\n";
    }

    print $fh_out "\n";
}

# Close the output file
close $fh_out;

print "Modified exam content written to $output_file\n";